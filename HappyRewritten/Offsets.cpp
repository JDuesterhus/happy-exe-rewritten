#include "Offsets.h"

COffsets Offsets;

using namespace json11;

void COffsets::DownloadOffsets() {
	//DOWNLOADING FRESH OFFSETS
	char downloadUrl[512];
	strcpy(downloadUrl, Settings.Misc.Offset_URL.c_str());
	char downloadFileName[64] = ".\\offsets.json"; //still need to xor
	URLDownloadToFile(0, downloadUrl, downloadFileName, 0, 0);
	DeleteUrlCacheEntry(downloadUrl);

	//FILE TO STRING
	std::ifstream downloadFile(downloadFileName);
	std::string downloadFileString((std::istreambuf_iterator<char>(downloadFile)), std::istreambuf_iterator<char>());
	text = downloadFileString;

	//PARSING JSON STRING
	const auto offsets = Json::parse(text, text);

	clientstate_choked_commands =		offsets[XorStr("signatures")][XorStr("clientstate_choked_commands")].int_value(); //isint
	clientstate_delta_ticks =			offsets[XorStr("signatures")][XorStr("clientstate_delta_ticks")].int_value();
	clientstate_last_outgoing_command = offsets[XorStr("signatures")][XorStr("clientstate_last_outgoing_command")].int_value();
	clientstate_net_channel =			offsets[XorStr("signatures")][XorStr("clientstate_net_channel")].int_value();
	convar_name_hash_table =			offsets[XorStr("signatures")][XorStr("convar_name_hash_table")].int_value();
	dwClientState =						offsets[XorStr("signatures")][XorStr("dwClientState")].int_value();
	dwClientState_GetLocalPlayer =		offsets[XorStr("signatures")][XorStr("dwClientState_GetLocalPlayer")].int_value();
	dwClientState_IsHLTV =				offsets[XorStr("signatures")][XorStr("dwClientState_IsHLTV")].int_value();
	dwClientState_Map =					offsets[XorStr("signatures")][XorStr("dwClientState_Map")].int_value();
	dwClientState_MapDirectory =		offsets[XorStr("signatures")][XorStr("dwClientState_MapDirectory")].int_value();
	dwClientState_MaxPlayer =			offsets[XorStr("signatures")][XorStr("dwClientState_MaxPlayer")].int_value();
	dwClientState_PlayerInfo =			offsets[XorStr("signatures")][XorStr("dwClientState_PlayerInfo")].int_value();
	dwClientState_State =				offsets[XorStr("signatures")][XorStr("dwClientState_State")].int_value();
	dwClientState_ViewAngles =			offsets[XorStr("signatures")][XorStr("dwClientState_ViewAngles")].int_value();
	dwEntityList =						offsets[XorStr("signatures")][XorStr("dwEntityList")].int_value();
	dwForceAttack =						offsets[XorStr("signatures")][XorStr("dwForceAttack")].int_value();
	dwForceAttack2 =					offsets[XorStr("signatures")][XorStr("dwForceAttack2")].int_value();
	dwForceBackward =					offsets[XorStr("signatures")][XorStr("dwForceBackward")].int_value();
	dwForceForward =					offsets[XorStr("signatures")][XorStr("dwForceForward")].int_value();
	dwForceJump =						offsets[XorStr("signatures")][XorStr("dwForceJump")].int_value();
	dwForceLeft =						offsets[XorStr("signatures")][XorStr("dwForceLeft")].int_value();
	dwForceRight =						offsets[XorStr("signatures")][XorStr("dwForceRight")].int_value();
	dwGameDir =							offsets[XorStr("signatures")][XorStr("dwGameDir")].int_value();
	dwGameRulesProxy =					offsets[XorStr("signatures")][XorStr("dwGameRulesProxy")].int_value();
	dwGetAllClasses =					offsets[XorStr("signatures")][XorStr("dwGetAllClasses")].int_value();
	dwGlobalVars =						offsets[XorStr("signatures")][XorStr("dwGlobalVars")].int_value();
	dwGlowObjectManager =				offsets[XorStr("signatures")][XorStr("dwGlowObjectManager")].int_value();
	dwInput =							offsets[XorStr("signatures")][XorStr("dwInput")].int_value();
	dwInterfaceLinkList =				offsets[XorStr("signatures")][XorStr("dwInterfaceLinkList")].int_value();
	dwLocalPlayer =						offsets[XorStr("signatures")][XorStr("dwLocalPlayer")].int_value();
	dwMouseEnable =						offsets[XorStr("signatures")][XorStr("dwMouseEnable")].int_value();
	dwMouseEnablePtr =					offsets[XorStr("signatures")][XorStr("dwMouseEnablePtr")].int_value();
	dwPlayerResource =					offsets[XorStr("signatures")][XorStr("dwPlayerResource")].int_value();
	dwRadarBase =						offsets[XorStr("signatures")][XorStr("dwRadarBase")].int_value();
	dwSensitivity =						offsets[XorStr("signatures")][XorStr("dwSensitivity")].int_value();
	dwSensitivityPtr =					offsets[XorStr("signatures")][XorStr("dwSensitivityPtr")].int_value();
	dwSetClanTag =						offsets[XorStr("signatures")][XorStr("dwSetClanTag")].int_value();
	dwViewMatrix =						offsets[XorStr("signatures")][XorStr("dwViewMatrix")].int_value();
	dwWeaponTable =						offsets[XorStr("signatures")][XorStr("dwWeaponTable")].int_value();
	dwWeaponTableIndex =				offsets[XorStr("signatures")][XorStr("dwWeaponTableIndex")].int_value();
	dwYawPtr =							offsets[XorStr("signatures")][XorStr("dwYawPtr")].int_value();
	dwZoomSensitivityRatioPtr =			offsets[XorStr("signatures")][XorStr("dwZoomSensitivityRatioPtr")].int_value();
	dwbSendPackets =					offsets[XorStr("signatures")][XorStr("dwbSendPackets")].int_value();
	dwppDirect3DDevice9 =				offsets[XorStr("signatures")][XorStr("dwppDirect3DDevice9")].int_value();
	force_update_spectator_glow =		offsets[XorStr("signatures")][XorStr("force_update_spectator_glow")].int_value();
	interface_engine_cvar =				offsets[XorStr("signatures")][XorStr("interface_engine_cvar")].int_value();
	is_c4_owner =						offsets[XorStr("signatures")][XorStr("is_c4_owner")].int_value();
	m_bDormant =						offsets[XorStr("signatures")][XorStr("m_bDormant")].int_value();
	m_pStudioHdr =						offsets[XorStr("signatures")][XorStr("m_pStudioHdr")].int_value();
	m_pitchClassPtr =					offsets[XorStr("signatures")][XorStr("m_pitchClassPtr")].int_value();
	m_yawClassPtr =						offsets[XorStr("signatures")][XorStr("m_yawClassPtr")].int_value();
	model_ambient_min =					offsets[XorStr("signatures")][XorStr("model_ambient_min")].int_value();
	set_abs_angles =					offsets[XorStr("signatures")][XorStr("set_abs_angles")].int_value();
	set_abs_origin =					offsets[XorStr("signatures")][XorStr("set_abs_origin")].int_value();
	cs_gamerules_data =					offsets[XorStr("netvars")][XorStr("cs_gamerules_data")].int_value();
	m_ArmorValue =						offsets[XorStr("netvars")][XorStr("m_ArmorValue")].int_value();
	m_Collision =						offsets[XorStr("netvars")][XorStr("m_Collision")].int_value();
	m_CollisionGroup =					offsets[XorStr("netvars")][XorStr("m_CollisionGroup")].int_value();
	m_Local =							offsets[XorStr("netvars")][XorStr("m_Local")].int_value();
	m_MoveType =						offsets[XorStr("netvars")][XorStr("m_MoveType")].int_value();
	m_OriginalOwnerXuidHigh =			offsets[XorStr("netvars")][XorStr("m_OriginalOwnerXuidHigh")].int_value();
	m_OriginalOwnerXuidLow =			offsets[XorStr("netvars")][XorStr("m_OriginalOwnerXuidLow")].int_value();
	m_SurvivalGameRuleDecisionTypes =	offsets[XorStr("netvars")][XorStr("m_SurvivalGameRuleDecisionTypes")].int_value();
	m_SurvivalRules =					offsets[XorStr("netvars")][XorStr("m_SurvivalRules")].int_value();
	m_aimPunchAngle =					offsets[XorStr("netvars")][XorStr("m_aimPunchAngle")].int_value();
	m_aimPunchAngleVel =				offsets[XorStr("netvars")][XorStr("m_aimPunchAngleVel")].int_value();
	m_angEyeAnglesX =					offsets[XorStr("netvars")][XorStr("m_angEyeAnglesX")].int_value();
	m_angEyeAnglesY =					offsets[XorStr("netvars")][XorStr("m_angEyeAnglesY")].int_value();
	m_bBombPlanted =					offsets[XorStr("netvars")][XorStr("m_bBombPlanted")].int_value();
	m_bFreezePeriod =					offsets[XorStr("netvars")][XorStr("m_bFreezePeriod")].int_value();
	m_bGunGameImmunity =				offsets[XorStr("netvars")][XorStr("m_bGunGameImmunity")].int_value();
	m_bHasDefuser =						offsets[XorStr("netvars")][XorStr("m_bHasDefuser")].int_value();
	m_bHasHelmet =						offsets[XorStr("netvars")][XorStr("m_bHasHelmet")].int_value();
	m_bInReload =						offsets[XorStr("netvars")][XorStr("m_bInReload")].int_value();
	m_bIsDefusing =						offsets[XorStr("netvars")][XorStr("m_bIsDefusing")].int_value();
	m_bIsGrabbingHostage =				offsets[XorStr("netvars")][XorStr("m_bIsGrabbingHostage")].int_value();
	m_bIsQueuedMatchmaking =			offsets[XorStr("netvars")][XorStr("m_bIsQueuedMatchmaking")].int_value();
	m_bIsScoped =						offsets[XorStr("netvars")][XorStr("m_bIsScoped")].int_value();
	m_bIsValveDS =						offsets[XorStr("netvars")][XorStr("m_bIsValveDS")].int_value();
	m_bSpotted =						offsets[XorStr("netvars")][XorStr("m_bSpotted")].int_value();
	m_bSpottedByMask =					offsets[XorStr("netvars")][XorStr("m_bSpottedByMask")].int_value();
	m_clrRender =						offsets[XorStr("netvars")][XorStr("m_clrRender")].int_value();
	m_dwBoneMatrix =					offsets[XorStr("netvars")][XorStr("m_dwBoneMatrix")].int_value();
	m_fAccuracyPenalty =				offsets[XorStr("netvars")][XorStr("m_fAccuracyPenalty")].int_value();
	m_fFlags =							offsets[XorStr("netvars")][XorStr("m_fFlags")].int_value();
	m_flC4Blow =						offsets[XorStr("netvars")][XorStr("m_flC4Blow")].int_value();
	m_flDefuseCountDown =				offsets[XorStr("netvars")][XorStr("m_flDefuseCountDown")].int_value();
	m_flDefuseLength =					offsets[XorStr("netvars")][XorStr("m_flDefuseLength")].int_value();
	m_flFallbackWear =					offsets[XorStr("netvars")][XorStr("m_flFallbackWear")].int_value();
	m_flFlashDuration =					offsets[XorStr("netvars")][XorStr("m_flFlashDuration")].int_value();
	m_flFlashMaxAlpha =					offsets[XorStr("netvars")][XorStr("m_flFlashMaxAlpha")].int_value();
	m_flLastBoneSetupTime =				offsets[XorStr("netvars")][XorStr("m_flLastBoneSetupTime")].int_value();
	m_flLowerBodyYawTarget =			offsets[XorStr("netvars")][XorStr("m_flLowerBodyYawTarget")].int_value();
	m_flNextAttack =					offsets[XorStr("netvars")][XorStr("m_flNextAttack")].int_value();
	m_flNextPrimaryAttack =				offsets[XorStr("netvars")][XorStr("m_flNextPrimaryAttack")].int_value();
	m_flSimulationTime =				offsets[XorStr("netvars")][XorStr("m_flSimulationTime")].int_value();
	m_flTimerLength =					offsets[XorStr("netvars")][XorStr("m_flTimerLength")].int_value();
	m_hActiveWeapon =					offsets[XorStr("netvars")][XorStr("m_hActiveWeapon")].int_value();
	m_hMyWeapons =						offsets[XorStr("netvars")][XorStr("m_hMyWeapons")].int_value();
	m_hObserverTarget =					offsets[XorStr("netvars")][XorStr("m_hObserverTarget")].int_value();
	m_hOwner =							offsets[XorStr("netvars")][XorStr("m_hOwner")].int_value();
	m_hOwnerEntity =					offsets[XorStr("netvars")][XorStr("m_hOwnerEntity")].int_value();
	m_iAccountID =						offsets[XorStr("netvars")][XorStr("m_iAccountID")].int_value();
	m_iClip1 =							offsets[XorStr("netvars")][XorStr("m_iClip1")].int_value();
	m_iCompetitiveRanking =				offsets[XorStr("netvars")][XorStr("m_iCompetitiveRanking")].int_value();
	m_iCompetitiveWins =				offsets[XorStr("netvars")][XorStr("m_iCompetitiveWins")].int_value();
	m_iCrosshairId =					offsets[XorStr("netvars")][XorStr("m_iCrosshairId")].int_value();
	m_iEntityQuality =					offsets[XorStr("netvars")][XorStr("m_iEntityQuality")].int_value();
	m_iFOV =							offsets[XorStr("netvars")][XorStr("m_iFOV")].int_value();
	m_iFOVStart =						offsets[XorStr("netvars")][XorStr("m_iFOVStart")].int_value();
	m_iGlowIndex =						offsets[XorStr("netvars")][XorStr("m_iGlowIndex")].int_value();
	m_iHealth =							offsets[XorStr("netvars")][XorStr("m_iHealth")].int_value();
	m_iItemDefinitionIndex =			offsets[XorStr("netvars")][XorStr("m_iItemDefinitionIndex")].int_value();
	m_iItemIDHigh =						offsets[XorStr("netvars")][XorStr("m_iItemIDHigh")].int_value();
	m_iMostRecentModelBoneCounter =		offsets[XorStr("netvars")][XorStr("m_iMostRecentModelBoneCounter")].int_value();
	m_iObserverMode =					offsets[XorStr("netvars")][XorStr("m_iObserverMode")].int_value();
	m_iShotsFired =						offsets[XorStr("netvars")][XorStr("m_iShotsFired")].int_value();
	m_iState =							offsets[XorStr("netvars")][XorStr("m_iState")].int_value();
	m_iTeamNum =						offsets[XorStr("netvars")][XorStr("m_iTeamNum")].int_value();
	m_lifeState =						offsets[XorStr("netvars")][XorStr("m_lifeState")].int_value();
	m_nFallbackPaintKit =				offsets[XorStr("netvars")][XorStr("m_nFallbackPaintKit")].int_value();
	m_nFallbackSeed =					offsets[XorStr("netvars")][XorStr("m_nFallbackSeed")].int_value();
	m_nFallbackStatTrak =				offsets[XorStr("netvars")][XorStr("m_nFallbackStatTrak")].int_value();
	m_nForceBone =						offsets[XorStr("netvars")][XorStr("m_nForceBone")].int_value();
	m_nTickBase =						offsets[XorStr("netvars")][XorStr("m_nTickBase")].int_value();
	m_rgflCoordinateFrame =				offsets[XorStr("netvars")][XorStr("m_rgflCoordinateFrame")].int_value();
	m_szCustomName =					offsets[XorStr("netvars")][XorStr("m_szCustomName")].int_value();
	m_szLastPlaceName =					offsets[XorStr("netvars")][XorStr("m_szLastPlaceName")].int_value();
	m_thirdPersonViewAngles =			offsets[XorStr("netvars")][XorStr("m_thirdPersonViewAngles")].int_value();
	m_vecOrigin =						offsets[XorStr("netvars")][XorStr("m_vecOrigin")].int_value();
	m_vecVelocity =						offsets[XorStr("netvars")][XorStr("m_vecVelocity")].int_value();
	m_vecViewOffset =					offsets[XorStr("netvars")][XorStr("m_vecViewOffset")].int_value();
	m_viewPunchAngle =					offsets[XorStr("netvars")][XorStr("m_viewPunchAngle")].int_value();
}